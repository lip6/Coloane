Sonar est un outil qui améliore la visibilité des développements de projets java et accompagne le développeur dans l'amélioration du projet.
Il permet d'apporter une qualité de code qui devient essentiel.
Il permet entre autres:
 -de détecter les projets à risque
   Ils sont détectés rapidement à partir des mesures et de graphiques synthétiques.
 -de fournir une visibilité sur les projets
   l'historisation des mesures et leur comparaison offrent une visibilité sur l'ensemble du projet.
 -de respecter les normes du marché
   Les conventions de codage sont respectées
 -d'acceder au code source

Sonar est trés facile d'installation puisqu'après l'avoir telechargé il suffit juste de lancer la commende suivante:
./sonar.sh console .sonar.sh se trouvant dans le dossier de sonar decompressé :"dossier sonar"/bin/sonar.sh

Sonar utilise une base de données par défaut,cet outil peut être utilisé directement en lancant la commande suivant sur un POM père d'un projet maven2:
 mvn org.codehaus.sonar:sonar-maven-plugin:1.3RC1:sonar

Voici ce que fait sonar lorsque cette commande est executée:
Le plugin Sonar va recompiler les sources, lancer les plugins JavaNCSS, Checkstyle, PMD et Cobertura (donc les tests seront aussi exécutés).
Ensuite, sonar va regrouper les résultats de ces plugins (sonar-core:collect) puis va remplir les données dans la base de donnéeMYSQL ou ORACLE Sonar va ensuite analyser ces données pour en finaliser les rapports.

Il suffit d'ouvrir un navigateur est d'aller dans http://localhost:9000 pour trouver le projets et ces rapports.

Tout cela est par défaut et paramétrable.

La base de donnée utilisée par sonar n'est en place que pour des tests.

Pour des raisons de stabilité et de securité,il est fortement conseillé de creer et mettre en place une BDD MYSQL ou oracle.

Voici la marche à suivre pour mettre en place une BDD mysql

Toutes l'installation et la mise en place de la BDD se trouve dans le tuto suivant:
http://docs.codehaus.org/display/SONAR/Installation+guide+%28v.+1.3%29

Si la BDD est en place alors SONAR devrait utiliser la nouvelle BDD créee.

Les problèmes auxquels on a été confrontés:

Mis à part la difficulté à creer une BDD nous avons eu besoinde faire "tourner" sonar et la BDD dans une machine autre que celle utilisée pour le projet (machine coloane).
Les raisons sont que coloane n'est pas une machine trés puissante et que le niveau de performance risque de se ressentir si on tourne deux applications en plus(BDD +sonar).
L'objectif était donc de creer une BDD et faire tourner sonar dans une autre machine (izanami) mais que le build soit lancer dans la machine coloane.
Le build est lancé à partir du serveur d'integration continue:continnum qui est dans coloane et on veut que les rapports de sonar soit dans izanmi.

Il suffit simplement d'ajouter un profil dans le settings.xml de la machine coloane et les lignes à ajouter sont les suivantes:

<settings>
    <profiles>
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- EXAMPLE FOR MYSQL -->
                <sonar.jdbc.url>jdbc:mysql://izanami:3306/sonar?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8</sonar.jdbc.url>
                <sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver>
                <sonar.jdbc.username>sonar</sonar.jdbc.username>
                <sonar.jdbc.password>mdp_de_la_BDD</sonar.jdbc.password>
            </properties>
        </profile>
     </profiles>
</settings>

Voici les choses telles qu'elles se passent :

Sur la machine coloane, on lance mvn sonar,c'est continuum qui s'en charge en réalité.
Le plugin Sonar va recompiler les sources, lancer les plugins JavaNCSS, Checkstyle, PMD et Cobertura (donc les tests seront aussi exécutés), tout ça sur la machine coloane.
Ensuite, sonar va regrouper les résultats de ces plugins (sonar-core:collect) puis va remplir les données dans la base de données qui se trouve sur la machine izanami.
La machine izanami, hébergeant Sonar va ensuite analyser ces données pour en finaliser les rapports.

Il ne faut surtout pas oublier,en revanche, que coloane a besoin d'acceder à la BDD d'izanami.






