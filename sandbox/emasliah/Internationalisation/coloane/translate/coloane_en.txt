~~~~~~~~~./communications/Com.java~~~~~~~~~
"Disconnection success !"="Deconnexion reussie !" ./communications/Com.java:176: System.out.println("Deconnexion reussie !");
"Ask for authentication"="Demande d'authentification :" ./communications/Com.java:91: System.out.println("Demande d'authentification : ");
"Ask for model connection"="Demande de connexion du modele" ./communications/Com.java:122: System.out.println("Demande de connexion du modele");
"Ask for all models disconnection"="Demande de deconnexion de tout les modeles" ./communications/Com.java:192: System.out.println("Demande de deconnexion de tout les modeles");
"Ask for current model disconnection"="Demande de deconnexion du modele" ./communications/Com.java:155: System.out.println("Demande de deconnexion du modele");
"Connection failure"="Echec de la connexion !" ./communications/Com.java:138: System.err.println("Echec de la connexion !");
"Disconnection failure"="Echec de la deconnexion !" ./communications/Com.java:179: System.err.println("Echec de la deconnexion !");
"Unable to build the model"="Impossible de construire le menu" ./communications/Com.java:241: System.err.println("Impossible de construire le menu");
"Dialog box answers transmission failed"="La transmission des reponses de la boite de dialogue a echouee" ./communications/Com.java:286: System.err.println("La transmission des reponses de la boite de dialogue a echouee");
"Session's name:"="Nom de la session :" ./communications/Com.java:126: System.out.println("Nom de la session : "+sessionName);
"Formalism's name:"="Nom du formalisme :" ./communications/Com.java:130: System.out.println("Nom du formalisme : "+formalismName);
"Authentication result: FAILED"="Retour authentification KO" ./communications/Com.java:102: System.err.println("Retour authentification KO");
"Authentication result: SUCCESS"="Retour authentification OK" ./communications/Com.java:100: System.out.println("Retour authentification OK");
~~~~~~~~~./communications/objects/FramekitMessage.java~~~~~~~~~
"Type is incorrect"="Le type n'est pas correct" ./communications/objects/FramekitMessage.java:64: throw new WrongArgumentValueException("Le type n'est pas correct (valeur 1, 2, 3, 4, 5 ou 6)");
"Special type is incorrect"="Le type special n'est pas correct" ./communications/objects/FramekitMessage.java:66: throw new WrongArgumentValueException("Le type special n'est pas correct (valeur 1, 2, 3 ou 4)");
~~~~~~~~~./model/Model.java~~~~~~~~~
"Incorrect build of multiline attribute"="Construction d'un attribut multiligne incorrecte" ./model/Model.java:224: throw new SyntaxErrorException("Construction d'un attribut multiligne incorrecte");
"Referent object does not exist"="Element referent introuvable" ./model/Model.java:143: throw new SyntaxErrorException("Element referent introuvable");
"Attribute location is impossible to set"="Impossible d'attachee la position de texte a un attribut" ./model/Model.java:306: throw new SyntaxErrorException("Impossible d'attachee la position de texte a un attribut");
"Referent object does not exist"="La position est attachee a un element introuvable ou incorrect" ./model/Model.java:259: throw new SyntaxErrorException("La position est attachee a un element introuvable ou incorrect");
"Target or Source node missing"="Noeud source ou cible manquant" ./model/Model.java:96: throw new SyntaxErrorException("Noeud source ou cible manquant");
~~~~~~~~~./motor/formalism/AttributeFormalism.java~~~~~~~~~
???? ="Attribut:" ./motor/formalism/AttributeFormalism.java:138: String str = "Attribut:n Name : " + name + "n Multilignes : " + isMultiLines;
???? ="Multilignes :" ./motor/formalism/AttributeFormalism.java:138: String str = "Attribut:n Name : " + name + "n Multilignes : " + isMultiLines;
???? ="Name :" ./motor/formalism/AttributeFormalism.java:138: String str = "Attribut:n Name : " + name + "n Multilignes : " + isMultiLines;
???? ="Valeur par defaut :" ./motor/formalism/AttributeFormalism.java:140: str.concat("n Valeur par defaut : " + defaultValue);
~~~~~~~~~./motor/formalism/FormalismManager.java~~~~~~~~~
!!!! ="action" ./motor/formalism/FormalismManager.java:146: attr = new AttributeFormalism(5,"action", false, true);
!!!! ="arc" ./motor/formalism/FormalismManager.java:188: elem = new ArcFormalism("arc", "Arc", IArcGraphicInfo.FIG_ARC_SIMPLE, 8, 8, false);
!!!! ="arc" ./motor/formalism/FormalismManager.java:194: elem.setAddrIcone16("/icons/arc16.png");
!!!! ="arc" ./motor/formalism/FormalismManager.java:195: elem.setAddrIcone24("/icons/arc24.png");
!!!! ="arc" ./motor/formalism/FormalismManager.java:199: elem = new ArcFormalism("inhibitor arc", "Inhibitor Arc", IArcGraphicInfo.FIG_ARC_INHIBITOR, 8, 8, false);
!!!! ="arc" ./motor/formalism/FormalismManager.java:205: elem.setAddrIcone16("/icons/arcinhibiteur16.png");
!!!! ="arc" ./motor/formalism/FormalismManager.java:206: elem.setAddrIcone24("/icons/arcinhibiteur24.png");
!!!! ="arc" ./motor/formalism/FormalismManager.java:316: elem = new ArcFormalism("arc", "Arc", IArcGraphicInfo.FIG_ARC_SIMPLE, 8, 8, false);
!!!! ="arc" ./motor/formalism/FormalismManager.java:318: elem.setAddrIcone16("icons/arc16.gif");
!!!! ="arc" ./motor/formalism/FormalismManager.java:319: elem.setAddrIcone24("icons/arc24.gif");
!!!! ="arc" ./motor/formalism/FormalismManager.java:439: elem.setAddrIcone16("/icons/arc16.png");
!!!! ="arc" ./motor/formalism/FormalismManager.java:440: elem.setAddrIcone24("/icons/arc24.png");
!!!! ="Arc" ./motor/formalism/FormalismManager.java:188: elem = new ArcFormalism("arc", "Arc", IArcGraphicInfo.FIG_ARC_SIMPLE, 8, 8, false);
!!!! ="Arc" ./motor/formalism/FormalismManager.java:199: elem = new ArcFormalism("inhibitor arc", "Inhibitor Arc", IArcGraphicInfo.FIG_ARC_INHIBITOR, 8, 8, false);
!!!! ="Arc" ./motor/formalism/FormalismManager.java:316: elem = new ArcFormalism("arc", "Arc", IArcGraphicInfo.FIG_ARC_SIMPLE, 8, 8, false);
!!!! ="author" ./motor/formalism/FormalismManager.java:101: attr = new AttributeFormalism(2,"author(s)", IAttributeGraphicInfo.NOR, true, true);
!!!! ="author" ./motor/formalism/FormalismManager.java:373: attr = new AttributeFormalism(2,"author(s)", IAttributeGraphicInfo.NOR, true, true);
!!!! ="Branching-Process" ./motor/formalism/FormalismManager.java:263: Formalism prefix = new Formalism("Branching-Process", "/icons/prefix.gif");
!!!! ="code" ./motor/formalism/FormalismManager.java:111: attr = new AttributeFormalism(7,"code", IAttributeGraphicInfo.NOR, true, true);
!!!! ="component" ./motor/formalism/FormalismManager.java:127: attr = new AttributeFormalism(4,"component", false, true);
!!!! ="condition" ./motor/formalism/FormalismManager.java:277: elem = new NodeFormalism("condition", "Condition", INodeGraphicInfo.FIG_CIRCLE, 16, 16, false);
!!!! ="condition" ./motor/formalism/FormalismManager.java:327: rule = new Rule("condition - condition", "Une condition ne peut etre reliee qu'a un event ou un cutoff.");
!!!! ="condition" ./motor/formalism/FormalismManager.java:328: rule.forbidenRule(prefix, "condition", "condition");
!!!! ="condition" ./motor/formalism/FormalismManager.java:332: rule = new Rule("event - event", "Un event ne peut etre relie qu'a une condition.");
!!!! ="condition" ./motor/formalism/FormalismManager.java:337: rule = new Rule("cutoff - event", "Un cutoff ne peut etre relie qu'a une condition.");
!!!! ="condition" ./motor/formalism/FormalismManager.java:342: rule = new Rule("event - cutoff", "Un cutoff ou un event ne peut etre relie qu'a une condition.");
!!!! ="condition" ./motor/formalism/FormalismManager.java:347: rule = new Rule("cutoff - cutoff", "Un cutoff ne peut etre relie qu'a une condition.");
!!!! ="Condition" ./motor/formalism/FormalismManager.java:277: elem = new NodeFormalism("condition", "Condition", INodeGraphicInfo.FIG_CIRCLE, 16, 16, false);
!!!! ="condition - condition" ./motor/formalism/FormalismManager.java:327: rule = new Rule("condition - condition", "Une condition ne peut etre reliee qu'a un event ou un cutoff.");
"Impossible to create a model from this file" ="Creation du modele impossible d'apres le fichier" ./motor/formalism/FormalismManager.java:510: throw new Exception("Creation du modele impossible d'apres le fichier");
!!!! ="cutoff" ./motor/formalism/FormalismManager.java:301: elem = new NodeFormalism("cutoff", "Cutoff", INodeGraphicInfo.FIG_RECT, 24, 8, true);
!!!! ="cutoff" ./motor/formalism/FormalismManager.java:327: rule = new Rule("condition - condition", "Une condition ne peut etre reliee qu'a un event ou un cutoff.");
!!!! ="cutoff" ./motor/formalism/FormalismManager.java:337: rule = new Rule("cutoff - event", "Un cutoff ne peut etre relie qu'a une condition.");
!!!! ="cutoff" ./motor/formalism/FormalismManager.java:338: rule.forbidenRule(prefix, "cutoff", "event");
!!!! ="cutoff" ./motor/formalism/FormalismManager.java:342: rule = new Rule("event - cutoff", "Un cutoff ou un event ne peut etre relie qu'a une condition.");
!!!! ="cutoff" ./motor/formalism/FormalismManager.java:343: rule.forbidenRule(prefix, "event", "cutoff");
!!!! ="cutoff" ./motor/formalism/FormalismManager.java:347: rule = new Rule("cutoff - cutoff", "Un cutoff ne peut etre relie qu'a une condition.");
!!!! ="cutoff" ./motor/formalism/FormalismManager.java:348: rule.forbidenRule(prefix, "cutoff", "cutoff");
!!!! ="Cutoff" ./motor/formalism/FormalismManager.java:301: elem = new NodeFormalism("cutoff", "Cutoff", INodeGraphicInfo.FIG_RECT, 24, 8, true);
!!!! ="cutoff - cutoff" ./motor/formalism/FormalismManager.java:347: rule = new Rule("cutoff - cutoff", "Un cutoff ne peut etre relie qu'a une condition.");
!!!! ="cutoff - event" ./motor/formalism/FormalismManager.java:337: rule = new Rule("cutoff - event", "Un cutoff ne peut etre relie qu'a une condition.");
!!!! ="date" ./motor/formalism/FormalismManager.java:109: attr = new AttributeFormalism(6,"date", IAttributeGraphicInfo.NOR, true, false);
!!!! ="deadlock" ./motor/formalism/FormalismManager.java:395: attr = new AttributeFormalism(4,"deadlock", false, true);
!!!! ="deadlock" ./motor/formalism/FormalismManager.java:410: attr = new AttributeFormalism(4,"deadlock", false, true);
!!!! ="deadlock" ./motor/formalism/FormalismManager.java:425: attr = new AttributeFormalism(4,"deadlock", false, true);
!!!! ="declaration" ./motor/formalism/FormalismManager.java:99: attr = new AttributeFormalism(1,"declaration", IAttributeGraphicInfo.NOR, true, true);
!!!! ="delay" ./motor/formalism/FormalismManager.java:144: attr = new AttributeFormalism(4,"delay", IAttributeGraphicInfo.NOR, true, true);
!!!! ="domain" ./motor/formalism/FormalismManager.java:123: attr = new AttributeFormalism(2,"domain", IAttributeGraphicInfo.L2, true, true);
!!!! ="domain" ./motor/formalism/FormalismManager.java:176: attr = new AttributeFormalism(2,"domain", IAttributeGraphicInfo.L2, true, true);
!!!! ="event" ./motor/formalism/FormalismManager.java:290: elem = new NodeFormalism("event", "Event", INodeGraphicInfo.FIG_RECT, 24, 8, false);
!!!! ="event" ./motor/formalism/FormalismManager.java:327: rule = new Rule("condition - condition", "Une condition ne peut etre reliee qu'a un event ou un cutoff.");
!!!! ="event" ./motor/formalism/FormalismManager.java:332: rule = new Rule("event - event", "Un event ne peut etre relie qu'a une condition.");
!!!! ="event" ./motor/formalism/FormalismManager.java:333: rule.forbidenRule(prefix, "event", "event");
!!!! ="event" ./motor/formalism/FormalismManager.java:337: rule = new Rule("cutoff - event", "Un cutoff ne peut etre relie qu'a une condition.");
!!!! ="event" ./motor/formalism/FormalismManager.java:338: rule.forbidenRule(prefix, "cutoff", "event");
!!!! ="event" ./motor/formalism/FormalismManager.java:342: rule = new Rule("event - cutoff", "Un cutoff ou un event ne peut etre relie qu'a une condition.");
!!!! ="event" ./motor/formalism/FormalismManager.java:343: rule.forbidenRule(prefix, "event", "cutoff");
!!!! ="event" ./motor/formalism/FormalismManager.java:433: elem = new ArcFormalism("event", "Event", IArcGraphicInfo.FIG_ARC_SIMPLE, 8, 8, false);
!!!! ="Event" ./motor/formalism/FormalismManager.java:290: elem = new NodeFormalism("event", "Event", INodeGraphicInfo.FIG_RECT, 24, 8, false);
!!!! ="Event" ./motor/formalism/FormalismManager.java:433: elem = new ArcFormalism("event", "Event", IArcGraphicInfo.FIG_ARC_SIMPLE, 8, 8, false);
!!!! ="event - cutoff" ./motor/formalism/FormalismManager.java:342: rule = new Rule("event - cutoff", "Un cutoff ou un event ne peut etre relie qu'a une condition.");
!!!! ="event - event" ./motor/formalism/FormalismManager.java:332: rule = new Rule("event - event", "Un event ne peut etre relie qu'a une condition.");
"Unknown extension"="Extension inconnue" ./motor/formalism/FormalismManager.java:505: throw new Exception("Extension inconnue");
"File extension or name invalid"="Extention du fichier ou nom invalide" ./motor/formalism/FormalismManager.java:534: throw new Exception("Extention du fichier ou nom invalide");
"File extension or name invalid"="Extention du fichier ou nom invalide" ./motor/formalism/FormalismManager.java:540: throw new Exception("Extention du fichier ou nom invalide");
!!!! ="guard" ./motor/formalism/FormalismManager.java:140: attr = new AttributeFormalism(2,"guard",IAttributeGraphicInfo.NOR, true, true,"true");
!!!! ="guard" ./motor/formalism/FormalismManager.java:159: attr = new AttributeFormalism(2,"guard", IAttributeGraphicInfo.NOR, true, true);
!!!! ="image" ./motor/formalism/FormalismManager.java:306: attr = new AttributeFormalism(3,"image", IAttributeGraphicInfo.NOR, true, true, "1");
!!!! ="image" ./motor/formalism/FormalismManager.java:308: attr = new AttributeFormalism(4,"num_image", false, true, "1");
!!!! ="immediate transition" ./motor/formalism/FormalismManager.java:156: elem = new NodeFormalism("immediate transition", "I. Transition", INodeGraphicInfo.FIG_RECT, 24, 8, true);
!!!! ="immediate transition" ./motor/formalism/FormalismManager.java:227: rule.forbidenRule(petri, "immediate transition", "immediate transition");
!!!! ="immediate transition" ./motor/formalism/FormalismManager.java:232: rule.forbidenRule(petri, "transition", "immediate transition");
!!!! ="immediate transition" ./motor/formalism/FormalismManager.java:237: rule.forbidenRule(petri, "immediate transition", "transition");
!!!! ="information" ./motor/formalism/FormalismManager.java:377: attr = new AttributeFormalism(4,"information", IAttributeGraphicInfo.NOR, true, true);
!!!! ="inhibitor arc" ./motor/formalism/FormalismManager.java:199: elem = new ArcFormalism("inhibitor arc", "Inhibitor Arc", IArcGraphicInfo.FIG_ARC_INHIBITOR, 8, 8, false);
!!!! ="Inhibitor Arc" ./motor/formalism/FormalismManager.java:199: elem = new ArcFormalism("inhibitor arc", "Inhibitor Arc", IArcGraphicInfo.FIG_ARC_INHIBITOR, 8, 8, false);
!!!! ="initial" ./motor/formalism/FormalismManager.java:388: elem = new NodeFormalism("initial_state", "Initial State", INodeGraphicInfo.FIG_DBLCIRCLE, 16, 16, false);
!!!! ="initial" ./motor/formalism/FormalismManager.java:393: attr = new AttributeFormalism(3,"initial", IAttributeGraphicInfo.NOR, true, true);
!!!! ="initial" ./motor/formalism/FormalismManager.java:398: elem.setAddrIcone16("/icons/initial16.png");
!!!! ="initial" ./motor/formalism/FormalismManager.java:399: elem.setAddrIcone24("/icons/initial24.png");
!!!! ="initial" ./motor/formalism/FormalismManager.java:408: attr = new AttributeFormalism(3,"initial", IAttributeGraphicInfo.NOR, true, true);
!!!! ="initial" ./motor/formalism/FormalismManager.java:423: attr = new AttributeFormalism(3,"initial", IAttributeGraphicInfo.NOR, true, true);
!!!! ="initial_state" ./motor/formalism/FormalismManager.java:388: elem = new NodeFormalism("initial_state", "Initial State", INodeGraphicInfo.FIG_DBLCIRCLE, 16, 16, false);
!!!! ="Initial State" ./motor/formalism/FormalismManager.java:388: elem = new NodeFormalism("initial_state", "Initial State", INodeGraphicInfo.FIG_DBLCIRCLE, 16, 16, false);
!!!! ="I. Transition" ./motor/formalism/FormalismManager.java:156: elem = new NodeFormalism("immediate transition", "I. Transition", INodeGraphicInfo.FIG_RECT, 24, 8, true);
!!!! ="label" ./motor/formalism/FormalismManager.java:280: attr = new AttributeFormalism(2,"label", IAttributeGraphicInfo.L2, true, true);
!!!! ="label" ./motor/formalism/FormalismManager.java:293: attr = new AttributeFormalism(2,"label", IAttributeGraphicInfo.NOR, true, true, "true");
!!!! ="label" ./motor/formalism/FormalismManager.java:304: attr = new AttributeFormalism(2,"label", IAttributeGraphicInfo.L2, true, true, "true");
!!!! ="label" ./motor/formalism/FormalismManager.java:434: attr = new AttributeFormalism(1,"label", IAttributeGraphicInfo.NOR, true, false);
!!!! ="marking" ./motor/formalism/FormalismManager.java:125: attr = new AttributeFormalism(3,"marking", IAttributeGraphicInfo.NOR, true, true);
!!!! ="marking" ./motor/formalism/FormalismManager.java:178: attr = new AttributeFormalism(3,"marking", IAttributeGraphicInfo.NOR, true, true);
!!!! ="marking" ./motor/formalism/FormalismManager.java:282: attr = new AttributeFormalism(3,"marking", IAttributeGraphicInfo.NOR, true, true);
!!!! ="name" ./motor/formalism/FormalismManager.java:121: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:138: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:157: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:174: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:278: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:291: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.NOR, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:302: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:389: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:404: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="name" ./motor/formalism/FormalismManager.java:419: attr = new AttributeFormalism(1,"name", IAttributeGraphicInfo.L1, true, false);
!!!! ="note" ./motor/formalism/FormalismManager.java:113: attr = new AttributeFormalism(8,"note", false, true);
!!!! ="note" ./motor/formalism/FormalismManager.java:129: attr = new AttributeFormalism(5,"note", false, true);
!!!! ="note" ./motor/formalism/FormalismManager.java:148: attr = new AttributeFormalism(6,"note", false, true);
!!!! ="note" ./motor/formalism/FormalismManager.java:165: attr = new AttributeFormalism(5,"note", false, true);
!!!! ="note" ./motor/formalism/FormalismManager.java:180: attr = new AttributeFormalism(4,"note", false, true);
!!!! ="note" ./motor/formalism/FormalismManager.java:191: attr = new AttributeFormalism(2,"note", false, true);
!!!! ="note" ./motor/formalism/FormalismManager.java:202: attr = new AttributeFormalism(2,"note", false, true);
!!!! ="num_image" ./motor/formalism/FormalismManager.java:308: attr = new AttributeFormalism(4,"num_image", false, true, "1");
!!!! ="origin" ./motor/formalism/FormalismManager.java:270: attr = new AttributeFormalism(2,"origin", IAttributeGraphicInfo.NOR, true, true);
!!!! ="place" ./motor/formalism/FormalismManager.java:120: elem = new NodeFormalism("place", "Place", INodeGraphicInfo.FIG_CIRCLE, 16, 16, false);
!!!! ="place" ./motor/formalism/FormalismManager.java:132: elem.setAddrIcone16("/icons/place16.png");
!!!! ="place" ./motor/formalism/FormalismManager.java:133: elem.setAddrIcone24("/icons/place24.png");
!!!! ="place" ./motor/formalism/FormalismManager.java:211: rule = new Rule("place - place","Une place ne peut etre reliee qu'a une transition.");
!!!! ="place" ./motor/formalism/FormalismManager.java:212: rule.forbidenRule(petri, "place", "place");
!!!! ="place" ./motor/formalism/FormalismManager.java:221: rule = new Rule("transition - transition","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="place" ./motor/formalism/FormalismManager.java:226: rule = new Rule("transition immediate - transition immediate","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="place" ./motor/formalism/FormalismManager.java:231: rule = new Rule("transition - transition immediate","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="place" ./motor/formalism/FormalismManager.java:236: rule = new Rule("transition immediate - transition","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="place" ./motor/formalism/FormalismManager.java:241: rule = new Rule("queue - place","Une queue ne peut etre reliee qu'a une transition ou une transition immediate.");
!!!! ="place" ./motor/formalism/FormalismManager.java:242: rule.forbidenRule(petri, "queue", "place");
!!!! ="place" ./motor/formalism/FormalismManager.java:246: rule = new Rule("place - queue","Une place ne peut etre reliee qu'a une transition ou une transition immediate.");
!!!! ="place" ./motor/formalism/FormalismManager.java:247: rule.forbidenRule(petri, "place", "queue");
!!!! ="place" ./motor/formalism/FormalismManager.java:285: elem.setAddrIcone16("../icons/place16.gif");
!!!! ="place" ./motor/formalism/FormalismManager.java:286: elem.setAddrIcone24("icons/place24.gif");
!!!! ="place" ./motor/formalism/FormalismManager.java:428: elem.setAddrIcone16("/icons/place16.png");
!!!! ="place" ./motor/formalism/FormalismManager.java:429: elem.setAddrIcone24("/icons/place24.png");
!!!! ="Place" ./motor/formalism/FormalismManager.java:120: elem = new NodeFormalism("place", "Place", INodeGraphicInfo.FIG_CIRCLE, 16, 16, false);
!!!! ="place - place" ./motor/formalism/FormalismManager.java:211: rule = new Rule("place - place","Une place ne peut etre reliee qu'a une transition.");
!!!! ="place - queue" ./motor/formalism/FormalismManager.java:246: rule = new Rule("place - queue","Une place ne peut etre reliee qu'a une transition ou une transition immediate.");
!!!! ="priority" ./motor/formalism/FormalismManager.java:142: attr = new AttributeFormalism(3,"priority", IAttributeGraphicInfo.NOR, true, true, "0");
!!!! ="priority" ./motor/formalism/FormalismManager.java:161: attr = new AttributeFormalism(3,"priority", IAttributeGraphicInfo.NOR, true, true, "1");
!!!! ="project" ./motor/formalism/FormalismManager.java:105: attr = new AttributeFormalism(4,"project", IAttributeGraphicInfo.NOR, true, true);
!!!! ="project" ./motor/formalism/FormalismManager.java:381: attr = new AttributeFormalism(6,"project", IAttributeGraphicInfo.NOR, true, false);
!!!! ="queue" ./motor/formalism/FormalismManager.java:173: elem = new NodeFormalism("queue", "Queue", INodeGraphicInfo.FIG_QUEUE, 16, 8, true);
!!!! ="queue" ./motor/formalism/FormalismManager.java:183: elem.setAddrIcone16("/icons/queue16.png");
!!!! ="queue" ./motor/formalism/FormalismManager.java:184: elem.setAddrIcone24("/icons/queue24.png");
!!!! ="queue" ./motor/formalism/FormalismManager.java:216: rule = new Rule("queue - queue","Une queue ne peut etre reliee qu'a une transition.");
!!!! ="queue" ./motor/formalism/FormalismManager.java:217: rule.forbidenRule(petri, "queue", "queue");
!!!! ="queue" ./motor/formalism/FormalismManager.java:221: rule = new Rule("transition - transition","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="queue" ./motor/formalism/FormalismManager.java:226: rule = new Rule("transition immediate - transition immediate","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="queue" ./motor/formalism/FormalismManager.java:231: rule = new Rule("transition - transition immediate","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="queue" ./motor/formalism/FormalismManager.java:236: rule = new Rule("transition immediate - transition","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="queue" ./motor/formalism/FormalismManager.java:241: rule = new Rule("queue - place","Une queue ne peut etre reliee qu'a une transition ou une transition immediate.");
!!!! ="queue" ./motor/formalism/FormalismManager.java:242: rule.forbidenRule(petri, "queue", "place");
!!!! ="queue" ./motor/formalism/FormalismManager.java:246: rule = new Rule("place - queue","Une place ne peut etre reliee qu'a une transition ou une transition immediate.");
!!!! ="queue" ./motor/formalism/FormalismManager.java:247: rule.forbidenRule(petri, "place", "queue");
!!!! ="Queue" ./motor/formalism/FormalismManager.java:173: elem = new NodeFormalism("queue", "Queue", INodeGraphicInfo.FIG_QUEUE, 16, 8, true);
!!!! ="queue - place" ./motor/formalism/FormalismManager.java:241: rule = new Rule("queue - place","Une queue ne peut etre reliee qu'a une transition ou une transition immediate.");
!!!! ="queue - queue" ./motor/formalism/FormalismManager.java:216: rule = new Rule("queue - queue","Une queue ne peut etre reliee qu'a une transition.");
!!!! ="ReachabilityGraph" ./motor/formalism/FormalismManager.java:366: Formalism graph = new Formalism("ReachabilityGraph", "/icons/gma.gif");
!!!! ="state" ./motor/formalism/FormalismManager.java:388: elem = new NodeFormalism("initial_state", "Initial State", INodeGraphicInfo.FIG_DBLCIRCLE, 16, 16, false);
!!!! ="state" ./motor/formalism/FormalismManager.java:403: elem = new NodeFormalism("terminal_state", "Terminal State", INodeGraphicInfo.FIG_CIRCLE, 16, 16, true);
!!!! ="state" ./motor/formalism/FormalismManager.java:418: elem = new NodeFormalism("state", "State", INodeGraphicInfo.FIG_CIRCLE, 16, 16, false);
!!!! ="State" ./motor/formalism/FormalismManager.java:388: elem = new NodeFormalism("initial_state", "Initial State", INodeGraphicInfo.FIG_DBLCIRCLE, 16, 16, false);
!!!! ="State" ./motor/formalism/FormalismManager.java:403: elem = new NodeFormalism("terminal_state", "Terminal State", INodeGraphicInfo.FIG_CIRCLE, 16, 16, true);
!!!! ="State" ./motor/formalism/FormalismManager.java:418: elem = new NodeFormalism("state", "State", INodeGraphicInfo.FIG_CIRCLE, 16, 16, false);
!!!! ="terminal_state" ./motor/formalism/FormalismManager.java:403: elem = new NodeFormalism("terminal_state", "Terminal State", INodeGraphicInfo.FIG_CIRCLE, 16, 16, true);
!!!! ="Terminal State" ./motor/formalism/FormalismManager.java:403: elem = new NodeFormalism("terminal_state", "Terminal State", INodeGraphicInfo.FIG_CIRCLE, 16, 16, true);
!!!! ="title" ./motor/formalism/FormalismManager.java:107: attr = new AttributeFormalism(5,"title", IAttributeGraphicInfo.NOR, true, true);
!!!! ="title" ./motor/formalism/FormalismManager.java:371: attr = new AttributeFormalism(1,"title", IAttributeGraphicInfo.NOR, true, true);
!!!! ="tool" ./motor/formalism/FormalismManager.java:267: attr = new AttributeFormalism(1,"tool", IAttributeGraphicInfo.NOR, true, true);
!!!! ="transition" ./motor/formalism/FormalismManager.java:137: elem = new NodeFormalism("transition", "Transition", INodeGraphicInfo.FIG_RECT, 24, 8, false);
!!!! ="transition" ./motor/formalism/FormalismManager.java:151: elem.setAddrIcone16("/icons/transition16.png");
!!!! ="transition" ./motor/formalism/FormalismManager.java:152: elem.setAddrIcone24("/icons/transition24.png");
!!!! ="transition" ./motor/formalism/FormalismManager.java:156: elem = new NodeFormalism("immediate transition", "I. Transition", INodeGraphicInfo.FIG_RECT, 24, 8, true);
!!!! ="transition" ./motor/formalism/FormalismManager.java:168: elem.setAddrIcone16("/icons/transitionimmediate16.png");
!!!! ="transition" ./motor/formalism/FormalismManager.java:169: elem.setAddrIcone24("/icons/transitionimmediate24.png");
!!!! ="transition" ./motor/formalism/FormalismManager.java:211: rule = new Rule("place - place","Une place ne peut etre reliee qu'a une transition.");
!!!! ="transition" ./motor/formalism/FormalismManager.java:216: rule = new Rule("queue - queue","Une queue ne peut etre reliee qu'a une transition.");
!!!! ="transition" ./motor/formalism/FormalismManager.java:221: rule = new Rule("transition - transition","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition" ./motor/formalism/FormalismManager.java:222: rule.forbidenRule(petri, "transition", "transition");
!!!! ="transition" ./motor/formalism/FormalismManager.java:226: rule = new Rule("transition immediate - transition immediate","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition" ./motor/formalism/FormalismManager.java:227: rule.forbidenRule(petri, "immediate transition", "immediate transition");
!!!! ="transition" ./motor/formalism/FormalismManager.java:231: rule = new Rule("transition - transition immediate","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition" ./motor/formalism/FormalismManager.java:232: rule.forbidenRule(petri, "transition", "immediate transition");
!!!! ="transition" ./motor/formalism/FormalismManager.java:236: rule = new Rule("transition immediate - transition","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition" ./motor/formalism/FormalismManager.java:237: rule.forbidenRule(petri, "immediate transition", "transition");
!!!! ="transition" ./motor/formalism/FormalismManager.java:241: rule = new Rule("queue - place","Une queue ne peut etre reliee qu'a une transition ou une transition immediate.");
!!!! ="transition" ./motor/formalism/FormalismManager.java:246: rule = new Rule("place - queue","Une place ne peut etre reliee qu'a une transition ou une transition immediate.");
!!!! ="transition" ./motor/formalism/FormalismManager.java:296: elem.setAddrIcone16("icons/transition16.gif");
!!!! ="transition" ./motor/formalism/FormalismManager.java:297: elem.setAddrIcone24("icons/transition24.gif");
!!!! ="transition" ./motor/formalism/FormalismManager.java:311: elem.setAddrIcone16("icons/transitionimmediate16.gif");
!!!! ="transition" ./motor/formalism/FormalismManager.java:312: elem.setAddrIcone24("icons/transitionimmediate24.gif");
!!!! ="Transition" ./motor/formalism/FormalismManager.java:137: elem = new NodeFormalism("transition", "Transition", INodeGraphicInfo.FIG_RECT, 24, 8, false);
!!!! ="Transition" ./motor/formalism/FormalismManager.java:156: elem = new NodeFormalism("immediate transition", "I. Transition", INodeGraphicInfo.FIG_RECT, 24, 8, true);
!!!! ="transition immediate - transition" ./motor/formalism/FormalismManager.java:226: rule = new Rule("transition immediate - transition immediate","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition immediate - transition" ./motor/formalism/FormalismManager.java:236: rule = new Rule("transition immediate - transition","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition immediate - transition immediate" ./motor/formalism/FormalismManager.java:226: rule = new Rule("transition immediate - transition immediate","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition - transition" ./motor/formalism/FormalismManager.java:221: rule = new Rule("transition - transition","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition - transition" ./motor/formalism/FormalismManager.java:231: rule = new Rule("transition - transition immediate","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="transition - transition immediate" ./motor/formalism/FormalismManager.java:231: rule = new Rule("transition - transition immediate","Une transition ne peut etre reliee qu'a une place ou une queue.");
!!!! ="type" ./motor/formalism/FormalismManager.java:379: attr = new AttributeFormalism(5,"type", IAttributeGraphicInfo.NOR, true, true);
"A cutoff must be linked to a condition."="Un cutoff ne peut etre relie qu'a une condition." ./motor/formalism/FormalismManager.java:337: rule = new Rule("cutoff - event", "Un cutoff ne peut etre relie qu'a une condition.");
"A cutoff must be linked to a condition."="Un cutoff ne peut etre relie qu'a une condition." ./motor/formalism/FormalismManager.java:347: rule = new Rule("cutoff - cutoff", "Un cutoff ne peut etre relie qu'a une condition.");
"A cutoff or a event must be linked to a condition."="Un cutoff ou un event ne peut etre relie qu'a une condition." ./motor/formalism/FormalismManager.java:342: rule = new Rule("event - cutoff", "Un cutoff ou un event ne peut etre relie qu'a une condition.");
"A condition must be linked to an event or a cutoff."="Une condition ne peut etre reliee qu'a un event ou un cutoff." ./motor/formalism/FormalismManager.java:327: rule = new Rule("condition - condition", "Une condition ne peut etre reliee qu'a un event ou un cutoff.");
"A place must be linked to a transition."="Une place ne peut etre reliee qu'a une transition." ./motor/formalism/FormalismManager.java:211: rule = new Rule("place - place","Une place ne peut etre reliee qu'a une transition.");
"A place must be linked to a transition."="Une place ne peut etre reliee qu'a une transition." ./motor/formalism/FormalismManager.java:246: rule = new Rule("place - queue","Une place ne peut etre reliee qu'a une transition ou une transition immediate.");
"A place must be linked to a transition or an immediate transition."="Une place ne peut etre reliee qu'a une transition ou une transition immediate." ./motor/formalism/FormalismManager.java:246: rule = new Rule("place - queue","Une place ne peut etre reliee qu'a une transition ou une transition immediate.");
"A queue must be linked to a transition."="Une queue ne peut etre reliee qu'a une transition." ./motor/formalism/FormalismManager.java:216: rule = new Rule("queue - queue","Une queue ne peut etre reliee qu'a une transition.");
"A queue must be linked to a transition."="Une queue ne peut etre reliee qu'a une transition." ./motor/formalism/FormalismManager.java:241: rule = new Rule("queue - place","Une queue ne peut etre reliee qu'a une transition ou une transition immediate.");
"A place must be linked to a transition or an immediate transition."="Une queue ne peut etre reliee qu'a une transition ou une transition immediate." ./motor/formalism/FormalismManager.java:241: rule = new Rule("queue - place","Une queue ne peut etre reliee qu'a une transition ou une transition immediate.");
"An immediate transition must be linked to a place or a queue."="Une transition immediate ne peut etre reliee qu'a une place ou une queue." ./motor/formalism/FormalismManager.java:226: rule = new Rule("transition immediate - transition immediate","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
"An immediate transition must be linked to a place or a queue."="Une transition immediate ne peut etre reliee qu'a une place ou une queue." ./motor/formalism/FormalismManager.java:236: rule = new Rule("transition immediate - transition","Une transition immediate ne peut etre reliee qu'a une place ou une queue.");
"A transition must be linked to a place or a queue."="Une transition ne peut etre reliee qu'a une place ou une queue." ./motor/formalism/FormalismManager.java:221: rule = new Rule("transition - transition","Une transition ne peut etre reliee qu'a une place ou une queue.");
"A transition must be linked to a place or a queue."="Une transition ne peut etre reliee qu'a une place ou une queue." ./motor/formalism/FormalismManager.java:231: rule = new Rule("transition - transition immediate","Une transition ne peut etre reliee qu'a une place ou une queue.");
"An event mus be linked to a condition."="Un event ne peut etre relie qu'a une condition." ./motor/formalism/FormalismManager.java:332: rule = new Rule("event - event", "Un event ne peut etre relie qu'a une condition.");
!!!! ="valuation" ./motor/formalism/FormalismManager.java:189: attr = new AttributeFormalism(1,"valuation", IAttributeGraphicInfo.NOR, true, true, "1");
!!!! ="valuation" ./motor/formalism/FormalismManager.java:200: attr = new AttributeFormalism(1,"valuation", IAttributeGraphicInfo.NOR, true, true, "1");
!!!! ="value" ./motor/formalism/FormalismManager.java:391: attr = new AttributeFormalism(2,"value", IAttributeGraphicInfo.L2, true, true);
!!!! ="value" ./motor/formalism/FormalismManager.java:406: attr = new AttributeFormalism(2,"value", IAttributeGraphicInfo.L2, true, true);
!!!! ="value" ./motor/formalism/FormalismManager.java:421: attr = new AttributeFormalism(2,"value", IAttributeGraphicInfo.L2, true, true);
!!!! ="value" ./motor/formalism/FormalismManager.java:436: attr = new AttributeFormalism(2,"value", false, true);
!!!! ="version" ./motor/formalism/FormalismManager.java:103: attr = new AttributeFormalism(3,"version", IAttributeGraphicInfo.NOR, true, false, "0,0");
!!!! ="version" ./motor/formalism/FormalismManager.java:375: attr = new AttributeFormalism(3,"version", IAttributeGraphicInfo.NOR, true, false, "0.0");
!!!! ="weight" ./motor/formalism/FormalismManager.java:163: attr = new AttributeFormalism(4,"weight", IAttributeGraphicInfo.NOR, true, true);
~~~~~~~~~./motor/Motor.java~~~~~~~~~
"Communication part is not ready"="FATAL : Module de communication non pret" ./motor/Motor.java:71: throw new Exception("FATAL : Module de communication non pret");
!!!! ="ReachabilityGraph" ./motor/Motor.java:115: final IModelImpl modelImpl = new ModelImplAdapter(model,getFormalismManager().loadFormalism("ReachabilityGraph"));
"Saving the incoming model..." ="Saving the incoming model..." ./motor/Motor.java:124: shell.setText("Saving the incoming model...");
~~~~~~~~~./ui/PaletteFactory.java~~~~~~~~~
!!!! ="Arcs" ./ui/PaletteFactory.java:107: PaletteDrawer componentsArcDrawer = new PaletteDrawer("Arcs");
!!!! ="Nodes" ./ui/PaletteFactory.java:63: PaletteDrawer componentsNodeDrawer = new PaletteDrawer("Nodes");
!!!! ="Tools" ./ui/PaletteFactory.java:147: PaletteGroup toolGroup = new PaletteGroup("Tools");
~~~~~~~~~./ui/UserInterface.java~~~~~~~~~
!!!! ="Compute structural bounds" ./ui/UserInterface.java:175: } else if (serviceName.equals("Compute structural bounds")) {
!!!! ="Here are unsafe places" ./ui/UserInterface.java:192: if (result.getHeadDescription().equals("Here are unsafe places")) {
!!!! ="Is the net structurally bounded?" ./ui/UserInterface.java:207: } else if (serviceName.equals("Is the net structurally bounded?")) {
!!!! ="Is the net structuraly safe?" ./ui/UserInterface.java:188: } else if (serviceName.equals("Is the net structuraly safe?")) {
!!!! ="List of unnamed places." ./ui/UserInterface.java:159: if (result.getHeadDescription().equals("List of unnamed places.")) {
!!!! ="List of unnamed transitions." ./ui/UserInterface.java:161: } else if (result.getHeadDescription().equals("List of unnamed transitions.")) {
!!!! ="No result" ./ui/UserInterface.java:143: labelService = "No result";
!!!! ="Petri net syntax checker" ./ui/UserInterface.java:153: if (serviceName.equals("Petri net syntax checker")) {
!!!! ="P-invariants" ./ui/UserInterface.java:216: } else if (serviceName.equals("P-invariants")) {
!!!! ="P-invariants" ./ui/UserInterface.java:217: labelService = "P-invariants";
!!!! ="Reasons are given above" ./ui/UserInterface.java:201: r.add(new fr.lip6.move.coloane.results.Result(description,"Reasons are given above"));
!!!! ="Structural bounds" ./ui/UserInterface.java:208: labelService = "Structural bounds";
!!!! ="Structural Bounds" ./ui/UserInterface.java:177: labelService = "Structural Bounds";
!!!! ="Structural safety" ./ui/UserInterface.java:189: labelService = "Structural safety";
!!!! ="Syntax-Checker Results" ./ui/UserInterface.java:154: labelService = "Syntax-Checker Results";
!!!! ="This place is unnamed" ./ui/UserInterface.java:160: description = "This place is unnamed";
!!!! ="This transition is unnamed" ./ui/UserInterface.java:162: description = "This transition is unnamed";
!!!! ="T-invariants" ./ui/UserInterface.java:238: } else if (serviceName.equals("T-invariants")) {
!!!! ="T-invariants" ./ui/UserInterface.java:239: labelService = "T-invariants";
!!!! ="Your net is not safe" ./ui/UserInterface.java:199: } else if (result.getHeadDescription().equals("Your net is not safe")) {
!!!! ="Your net is not safe" ./ui/UserInterface.java:200: String description = "Your net is not safe";
~~~~~~~~~./ui/actions/AuthenticationAction.java~~~~~~~~~
!!!! ="Authentification" ./ui/actions/AuthenticationAction.java:42: HistoryView.instance.addText("[?] Authentification -> ");
!!!! ="Connect model" ./ui/actions/AuthenticationAction.java:50: MenuManipulation.setEnabled("Platform", "Connect model", true);
!!!! ="Disconnect model" ./ui/actions/AuthenticationAction.java:51: MenuManipulation.setEnabled("Platform", "Disconnect model", true);
!!!! ="Error during view initialization" ./ui/actions/AuthenticationAction.java:36: "Error during view initialization",
!!!! ="KO" ./ui/actions/AuthenticationAction.java:53: HistoryView.instance.addLine("KO");
!!!! ="OK" ./ui/actions/AuthenticationAction.java:48: HistoryView.instance.addLine("OK");
!!!! ="Platform" ./ui/actions/AuthenticationAction.java:50: MenuManipulation.setEnabled("Platform", "Connect model", true);
!!!! ="Platform" ./ui/actions/AuthenticationAction.java:51: MenuManipulation.setEnabled("Platform", "Disconnect model", true);
!!!! ="The Historic view cannot be opened" ./ui/actions/AuthenticationAction.java:37: "The Historic view cannot be opened");
~~~~~~~~~./ui/actions/ConnectModelAction.java~~~~~~~~~
"Connecting a model"="Connexion d'un modele" ./ui/actions/ConnectModelAction.java:43: System.out.println("Connexion d'un modele");
"Connecting a model"="Connexion d'un modele" ./ui/actions/ConnectModelAction.java:44: HistoryView.instance.addLine("[?] Connexion d'un modele");
"Connecting..."="Connexion en cours..." ./ui/actions/ConnectModelAction.java:54: HistoryView.instance.addText("Connexion en cours... ");
"Failure: No opened model"="Echec: Aucun modele ouvert !" ./ui/actions/ConnectModelAction.java:47: HistoryView.instance.addLine("[!] Echec: Aucun modele ouvert !");
"Failure: The model is not valid"="Echec: Le modele n'est pas valide" ./ui/actions/ConnectModelAction.java:81: HistoryView.instance.addText("[!] Echec: Le modele n'est pas valide");
"Error during view initialization"="Error during view initialization" ./ui/actions/ConnectModelAction.java:39: "Error during view initialization",
"FAILED"="FAILED" ./ui/actions/ConnectModelAction.java:77: HistoryView.instance.addLine("FAILED");
"SUCCESS"="SUCCESS" ./ui/actions/ConnectModelAction.java:72: HistoryView.instance.addLine("SUCCESS");
"The Historic view cannot be opened"="The Historic view cannot be opened" ./ui/actions/ConnectModelAction.java:40: "The Historic view cannot be opened");
~~~~~~~~~./ui/actions/DisconnectModelAction.java~~~~~~~~~
!!!! ="Connect model" ./ui/actions/DisconnectModelAction.java:61: MenuManipulation.setEnabled("Platform", "Connect model", true);
"Disconnecting model"="Deconnexion d'un modele" ./ui/actions/DisconnectModelAction.java:44: System.out.println("Deconnexion d'un modele");
"Disconnecting model"="Deconnexion d'un modele" ./ui/actions/DisconnectModelAction.java:45: HistoryView.instance.addLine("[?] Deconnexion d'un modele");
"Disconnecting..."="Deconnexion en cours..." ./ui/actions/DisconnectModelAction.java:55: HistoryView.instance.addText("Deconnexion en cours... ");
!!!! ="Disconnect model" ./ui/actions/DisconnectModelAction.java:62: MenuManipulation.setEnabled("Platform", "Disconnect model", false);
"Failure: No opened model !"="Echec: Aucun modele ouvert !" ./ui/actions/DisconnectModelAction.java:48: HistoryView.instance.addLine("[!] Echec: Aucun modele ouvert !");
"Failure: The model is not valid"="Echec: Le modele n'est pas valide" ./ui/actions/DisconnectModelAction.java:69: HistoryView.instance.addText("[!] Echec: Le modele n'est pas valide");
"Error during view initialization"="Error during view initialization" ./ui/actions/DisconnectModelAction.java:40: "Error during view initialization",
"FAILED"="FAILED" ./ui/actions/DisconnectModelAction.java:65: HistoryView.instance.addLine("FAILED");
"SUCCESS"="SUCCESS" ./ui/actions/DisconnectModelAction.java:60: HistoryView.instance.addLine("SUCCESS");
"The Historic view cannot be opened"="The Historic view cannot be opened" ./ui/actions/DisconnectModelAction.java:41: "The Historic view cannot be opened");
~~~~~~~~~./ui/actions/DumpAction.java~~~~~~~~~
"Please open a model to dump"="Please open a model to dump" ./ui/actions/DumpAction.java:26: Coloane.showErrorMsg("Please open a model to dump");
~~~~~~~~~./ui/actions/ImportExportCAMI.java~~~~~~~~~
"Please open a model to export"="Please open a model to export" ./ui/actions/ImportExportCAMI.java:56: Coloane.showErrorMsg("Please open a model to export ");
"Please save model before exporting !"="Please save model before exporting !" ./ui/actions/ImportExportCAMI.java:66: Coloane.showWarningMsg("Please save model before exporting !");
~~~~~~~~~./ui/commands/ArcDeleteCmd.java~~~~~~~~~
"Delete arc" ="delete arc" ./ui/commands/ArcDeleteCmd.java:27: setLabel(" delete arc ");
~~~~~~~~~./ui/commands/ArcReconnectCmd.java~~~~~~~~~
"Move connection endpoint" ="move connection endpoint" ./ui/commands/ArcReconnectCmd.java:160: setLabel("move connection endpoint");
"Move connection startpoint" ="move connection startpoint" ./ui/commands/ArcReconnectCmd.java:151: setLabel("move connection startpoint");
~~~~~~~~~./ui/commands/NodeDeleteCmd.java~~~~~~~~~
"Delete a node"="Delete a node" ./ui/commands/NodeDeleteCmd.java:46: setLabel("Delete a node");
"Unable to delete the node"="Impossible de supprimer le noeud. L'appel de la commande n'est pas valide" ./ui/commands/NodeDeleteCmd.java:42: throw new BuildException("Impossible de supprimer le noeud. L'appel de la commande n'est pas valide");
~~~~~~~~~./ui/dialogs/AuthenticationDialog.java~~~~~~~~~
"Error:"="Erreur:" ./ui/dialogs/AuthenticationDialog.java:149: Coloane.showErrorMsg("Erreur: " + erreur.getMessage());
"Global error"="Erreur globale" ./ui/dialogs/AuthenticationDialog.java:61: private static final String MSG_GNRL_ERROR = "Erreur globale";
"Framekit IP :"="Framekit IP :" ./ui/dialogs/AuthenticationDialog.java:105: new Label(compo, SWT.NULL).setText("Framekit IP :");
"Framekit Port :"="Framekit Port :" ./ui/dialogs/AuthenticationDialog.java:112: new Label(compo, SWT.NULL).setText("Framekit Port :");
"Login or password invalid"="Identifiant ou mot de passe invalide" ./ui/dialogs/AuthenticationDialog.java:52: private static final String MSG_AUTH_ERROR = "Identifiant ou mot de passe invalide";
!!!! ="login" ./ui/dialogs/AuthenticationDialog.java:36: public static final String LOGIN_TAG = "login";
"Login" ="Login :" ./ui/dialogs/AuthenticationDialog.java:91: new Label(compo, SWT.NULL).setText("Login :");
!!!! ="name" ./ui/dialogs/AuthenticationDialog.java:245: tagged.setData("name", data); //$NON-NLS-1$
!!!! ="password" ./ui/dialogs/AuthenticationDialog.java:33: public static final String PASSWORD_TAG = "password";
"Password"="Password :" ./ui/dialogs/AuthenticationDialog.java:97: new Label(compo, SWT.NULL).setText("Password :");
"You must enter a password"="Vous devez fournir un mot de passe" ./ui/dialogs/AuthenticationDialog.java:58: private static final String MSG_PASS_ERROR = "Vous devez fournir un mot de passe";
"You must enter a login"="Vous devez fournir un nom d'utilisateur" ./ui/dialogs/AuthenticationDialog.java:55: private static final String MSG_LOGIN_ERROR = "Vous devez fournir un nom d'utilisateur";
~~~~~~~~~./ui/menus/GraphicalMenu.java~~~~~~~~~
!!!!  ="Coloane Services" ./ui/menus/GraphicalMenu.java:75: if (mi[i].getText().contentEquals("Coloane Services")) {
!!!! ="Coloane Services" ./ui/menus/GraphicalMenu.java:112: if (mi.getText().equals("Coloane Services"))
!!!! ="Coloane Services" ./ui/menus/GraphicalMenu.java:125: if (mi.getText().equals("Coloane Services"))
~~~~~~~~~./ui/menus/MenuManipulation.java~~~~~~~~~
!!!! ="Coloane Services" ./ui/menus/MenuManipulation.java:22: if(item.getText().equals("Coloane Services"))
!!!! ="Coloane Services" ./ui/menus/MenuManipulation.java:65: if(item.getText().equals("Coloane Services"))
~~~~~~~~~./ui/model/ArcImplAdapter.java~~~~~~~~~
"Unable to reconnect the arc"="Impossible de reconnecter l'arc" ./ui/model/ArcImplAdapter.java:263: throw new BuildException("Impossible de reconnecter l'arc");
!!!! ="label" ./ui/model/ArcImplAdapter.java:357: if (this.arc.getNthAttr(i).getName().equalsIgnoreCase("label")) {
!!!! ="valuation" ./ui/model/ArcImplAdapter.java:343: if (this.arc.getNthAttr(i).getName().equalsIgnoreCase("valuation")) {
~~~~~~~~~./ui/model/ModelImplAdapter.java~~~~~~~~~
"Node creation refused: this node identifier already exists" ="Ajout impossible: L'identifiant du noeud existe deja" ./ui/model/ModelImplAdapter.java:271: "Ajout impossible: L'identifiant du noeud existe deja");
"Node creation refused: this node identifier already exists" ="Ajout impossible: L'identifiant du noeud existe deja" ./ui/model/ModelImplAdapter.java:314: "Ajout impossible: L'identifiant du noeud existe deja");
"Error during the node addition" ="Erreur lors de l'ajout d'un noeud au modele" ./ui/model/ModelImplAdapter.java:281: "Erreur lors de l'ajout d'un noeud au modele");
"Error during the node deletion" ="Erreurs lors de la suppression d'un noeud du modele" ./ui/model/ModelImplAdapter.java:299: "Erreurs lors de la suppression d'un noeud du modele");
"Arc source or target missing" ="Source ou destination de l'arc manquante" ./ui/model/ModelImplAdapter.java:171: throw new Exception("Source ou destination de l'arc manquante");
~~~~~~~~~./ui/model/NodeImplAdapter.java~~~~~~~~~
"Error during the addition of an input arc" ="Erreur lors de l'ajout d'un arc entrant au modele" ./ui/model/NodeImplAdapter.java:188: throw new BuildException("Erreur lors de l'ajout d'un arc entrant au modele");
"Error during the addition of an output arc" ="Erreur lors de l'ajout d'un arc sortant au modele" ./ui/model/NodeImplAdapter.java:202: throw new BuildException("Erreur lors de l'ajout d'un arc sortant au modele");
~~~~~~~~~./ui/panels/HistoryView.java~~~~~~~~~
"Copy"="Copy" ./ui/panels/HistoryView.java:114: copyAction.setText("Copy");
"Copy selected text"="Copy" ./ui/panels/HistoryView.java:115: copyAction.setToolTipText("Copy selected text");
"Copy selected text"="Copy selected text" ./ui/panels/HistoryView.java:115: copyAction.setToolTipText("Copy selected text");
"Find..."="Find..." ./ui/panels/HistoryView.java:137: findAction.setText("Find...");
"Find...="Find" ./ui/panels/HistoryView.java:138: findAction.setToolTipText("Find text...");
"Find text..."="Find text..." ./ui/panels/HistoryView.java:138: findAction.setToolTipText("Find text...");
"Select all"="Select All" ./ui/panels/HistoryView.java:127: selectAllAction.setText("Select All");
"Select all text in history window"="Select all text in history window" ./ui/panels/HistoryView.java:128: selectAllAction.setToolTipText("Select all text in history window");
~~~~~~~~~./ui/wizards/ModelCreationPage.java~~~~~~~~~
"Attach your model."="Attach your model." ./ui/wizards/ModelCreationPage.java:38: setTitle("Attach your model.");
"Cannot create file"="Cannot create file 'file'" ./ui/wizards/ModelCreationPage.java:86: setErrorMessage("Cannot create file 'file'");
"Choose a modeling project to store your model to."="Choose a modeling project to store your model to." ./ui/wizards/ModelCreationPage.java:39: setDescription("Choose a modeling project to store your model to.");
"Coloane has not been launched correctly..."="Coloane has not been launched correctly..." ./ui/wizards/ModelCreationPage.java:73: setErrorMessage("Coloane has not been launched correctly...");
"Unable to create the file"="Impossible de creer le fichier" ./ui/wizards/ModelCreationPage.java:87: System.err.println("Impossible de creer le fichier");
"Unable to open the file"="Impossible d'ouvrir le fichier" ./ui/wizards/ModelCreationPage.java:100: System.err.println("Impossible d'ouvrir le fichier");
~~~~~~~~~./ui/wizards/NewModelWizard.java~~~~~~~~~
"Build a new model !"="Build a new model !" ./ui/wizards/NewModelWizard.java:42: setWindowTitle("Build a new model !");
"The chosen formalism is :"="Le formalisme choisi est :" ./ui/wizards/NewModelWizard.java:69: System.out.println("Le formalisme choisi est : "+formalismName);
~~~~~~~~~./ui/wizards/NewProjectWizard.java~~~~~~~~~
"Create a new modeling project..."="Create a new modeling project..." ./ui/wizards/NewProjectWizard.java:67: setWindowTitle("Create a new modeling project...");
"Modeling project"="Model project" ./ui/wizards/NewProjectWizard.java:40: String[] natureIds = { "Model project" };
~~~~~~~~~./ui/wizards/ProjectCreationPage.java~~~~~~~~~
"Create a modeling project to manage all your model files."="Create a modeling project to manage all your model files." ./ui/wizards/ProjectCreationPage.java:11: setDescription("Create a modeling project to manage all your model files.");
"New modeling project"="New modeling project" ./ui/wizards/ProjectCreationPage.java:10: setTitle("New modeling project");
~~~~~~~~~./ui/wizards/SelectFormalismPage.java~~~~~~~~~
