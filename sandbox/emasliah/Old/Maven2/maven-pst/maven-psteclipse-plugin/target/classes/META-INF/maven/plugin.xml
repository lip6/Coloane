<plugin>
  <description></description>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-psteclipse-plugin</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <goalPrefix>psteclipse</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>assemble</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: AssemblyMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;AssemblyMojo&lt;/code&gt; is a Mojo that assembles a distribution
of the all the eclipse plugins that are created in a hierarchy.
If run on the command line, it must follow a &quot;mvn package&quot;.&lt;/li&gt;
&lt;li&gt;Created:&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>org.codehaus.pst.plugin.AssemblyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>reactors</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <mavenProject implementation="org.apache.maven.project.MavenProject">${project}</mavenProject>
        <outputDirectory implementation="java.io.File">${outputDir}</outputDirectory>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <baseDirectory implementation="java.io.File">${basedir}</baseDirectory>
        <reactors implementation="java.util.List">${reactorProjects}</reactors>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>zip</role-hint>
          <field-name>zipArchiver</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>release</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: &lt;/li&gt;
&lt;li&gt;Description: &lt;/li&gt;
&lt;li&gt;Created: Feb 13, 2007 by: prisgupt01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.pst.plugin.AssemblyReleaseMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>releaseName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <releaseName implementation="java.lang.String">${releaseName}</releaseName>
        <mavenProject implementation="org.apache.maven.project.MavenProject">${project}</mavenProject>
        <outputDirectory implementation="java.io.File">${outputDir}</outputDirectory>
        <baseDirectory implementation="java.io.File">${basedir}</baseDirectory>
      </configuration>
    </mojo>
    <mojo>
      <goal>deploy-binary-plugin</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: &lt;/li&gt;
&lt;li&gt;Description: &lt;/li&gt;
&lt;li&gt;Created: Feb 12, 2007 by: prisgupt01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.pst.plugin.BinaryPluginDeployerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>dependencies</name>
          <type>org.apache.maven.model.Dependency[]</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <mavenProject implementation="org.apache.maven.project.MavenProject">${project}</mavenProject>
        <dependencies implementation="org.apache.maven.model.Dependency[]">${dependencies}</dependencies>
        <outputDirectory implementation="java.io.File">${pluginOutputDir}</outputDirectory>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <baseDirectory implementation="java.io.File">${basedir}</baseDirectory>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>install</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: BinaryPluginInstallMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;BinaryPluginInstallMojo&lt;/code&gt; is a Mojo
for installing binary plugins.&lt;/li&gt;
&lt;li&gt;Created: Aug 30, 2006 by: prisgupt01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.pst.plugin.BinaryPluginInstallMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifact</name>
          <type>org.apache.maven.artifact.Artifact</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact.</description>
        </parameter>
        <parameter>
          <name>attachedArtifacts</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The attached artifacts.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local repository.</description>
        </parameter>
        <parameter>
          <name>packaging</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>The packaging.</description>
        </parameter>
        <parameter>
          <name>pomFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The POM file.</description>
        </parameter>
        <parameter>
          <name>updateReleaseInfo</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to update the metadata to make the artifact as release.</description>
        </parameter>
      </parameters>
      <configuration>
        <artifact implementation="org.apache.maven.artifact.Artifact">${project.artifact}</artifact>
        <pomFile implementation="java.io.File">${project.file}</pomFile>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <attachedArtifacts implementation="java.util.List">${project.attachedArtifacts}</attachedArtifacts>
        <updateReleaseInfo implementation="boolean" default-value="false">${updateReleaseInfo}</updateReleaseInfo>
        <packaging implementation="java.lang.String">${project.packaging}</packaging>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.installer.ArtifactInstaller</role>
          <field-name>installer</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>deploy</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: DeployMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;DeployMojo&lt;/code&gt; is a Maven Mojo that
&quot;scrapes&quot; an Eclipse home directory and creates a package and POM for each
plugin for deployment to a Maven repository.&lt;/li&gt;
&lt;li&gt;Created: Aug 1, 2006 by: prippete01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>deploy</phase>
      <implementation>org.codehaus.pst.plugin.DeployMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>eclipseHome</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The eclipse home.</description>
        </parameter>
        <parameter>
          <name>groupId</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The group id.</description>
        </parameter>
        <parameter>
          <name>prefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The prefix.</description>
        </parameter>
        <parameter>
          <name>repositoryHome</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The repository home.</description>
        </parameter>
        <parameter>
          <name>repositoryId</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The repository id.</description>
        </parameter>
        <parameter>
          <name>url</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL.</description>
        </parameter>
      </parameters>
      <configuration>
        <eclipseHome implementation="java.io.File">${eclipseHome}</eclipseHome>
        <groupId implementation="java.lang.String">${groupId}</groupId>
        <repositoryHome implementation="java.io.File">${repositoryHome}</repositoryHome>
        <repositoryId implementation="java.lang.String">${repositoryId}</repositoryId>
        <prefix implementation="java.lang.String">${prefix}</prefix>
        <url implementation="java.lang.String">${url}</url>
      </configuration>
    </mojo>
    <mojo>
      <goal>eclipse-plugin</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: ManifestGeneratorMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;ManifestGeneratorMojo&lt;/code&gt; is a Mojo
that generates an Eclipse plugin manifest, and deploys the dependent
artifacts, for a binary plugin.&lt;/li&gt;
&lt;li&gt;Created: Aug 9, 2006 by: prisgupt01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>validate</phase>
      <implementation>org.codehaus.pst.plugin.ManifestGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The base directory.</description>
        </parameter>
        <parameter>
          <name>buddies</name>
          <type>java.util.ArrayList</type>
          <required>false</required>
          <editable>true</editable>
          <description>The Eclipse buddies.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <buddies implementation="java.util.ArrayList">${buddies}</buddies>
        <baseDirectory implementation="java.io.File">${basedir}</baseDirectory>
      </configuration>
    </mojo>
    <mojo>
      <goal>mule</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: MuleMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;MuleMojo&lt;/code&gt; is a &quot;test mule&quot; for
figuring out things about Maven that requires the execution of a Mojo within
the context of a POM.&lt;/li&gt;
&lt;li&gt;Created: Aug 30, 2006 by: prippete01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.pst.plugin.MuleMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The project.</description>
        </parameter>
        <parameter>
          <name>stop</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to force the mule to simply stop.</description>
        </parameter>
      </parameters>
      <configuration>
        <stop implementation="boolean">${stop}</stop>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
    </mojo>
    <mojo>
      <goal>test</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: PDETestMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;PDETestMojo&lt;/code&gt; is a Maven Mojo that
sets up a PDE test for Eclipse.&lt;/li&gt;
&lt;li&gt;Created: Aug 28, 2006 by: prippete01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>test</phase>
      <implementation>org.codehaus.pst.plugin.PDETestMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The base directory.</description>
        </parameter>
        <parameter>
          <name>eclipseDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The Eclipse directory.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>prefixes</name>
          <type>java.util.ArrayList</type>
          <required>false</required>
          <editable>true</editable>
          <description>The prefixes.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to skip the tests.</description>
        </parameter>
        <parameter>
          <name>testFailureIgnore</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to ignore test failures. The primary use case for this
is cobertura, which needs to run regardless of whether the tests pass or
not.</description>
        </parameter>
        <parameter>
          <name>testFrameworkVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The Eclipse PDE test framework version.</description>
        </parameter>
        <parameter>
          <name>testOutputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory containing generated test classes of the project being
tested.</description>
        </parameter>
      </parameters>
      <configuration>
        <prefixes implementation="java.util.ArrayList">${prefixes}</prefixes>
        <testOutputDirectory implementation="java.io.File">${project.build.testOutputDirectory}</testOutputDirectory>
        <skip implementation="boolean">${maven.test.skip}</skip>
        <testFrameworkVersion implementation="java.lang.String">${testFrameworkVersion}</testFrameworkVersion>
        <eclipseDirectory implementation="java.io.File">${eclipseDirectory}</eclipseDirectory>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <baseDirectory implementation="java.io.File">${basedir}</baseDirectory>
        <testFailureIgnore implementation="boolean">${testFailureIgnore}</testFailureIgnore>
      </configuration>
    </mojo>
    <mojo>
      <goal>package</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: PluginPackagingMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;PluginPackagingMojo&lt;/code&gt; is a packaging
Mojo for packaging Eclipse source plugins.&lt;/li&gt;
&lt;li&gt;Created: Aug 29, 2006 by: prisgupt01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.pst.plugin.PluginPackagingMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use. See &lt;a
href=&quot;http://maven.apache.org/ref/current/maven-archiver/apidocs/org/apache/maven/archiver/MavenArchiveConfiguration.html&quot;&gt;the
Javadocs for MavenArchiveConfiguration&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the classes.</description>
        </parameter>
        <parameter>
          <name>finalName</name>
          <alias>jarName</alias>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Name of the generated JAR.</description>
        </parameter>
        <parameter>
          <name>forceCreation</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether creating the archive should be forced.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the generated JAR.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <classesDirectory implementation="java.io.File">${project.build.outputDirectory}</classesDirectory>
        <outputDirectory implementation="java.io.File">${project.build.directory}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <forceCreation implementation="boolean" default-value="false">${jar.forceCreation}</forceCreation>
        <baseDirectory implementation="java.io.File">${basedir}</baseDirectory>
        <finalName implementation="java.lang.String">${project.build.finalName}</finalName>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>jar</role-hint>
          <field-name>jarArchiver</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>update</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: PomModifierMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;PomModifierMojo&lt;/code&gt; is a Maven Mojo
that updates the in-memory POM with entries in a Manifest file. This Mojo
expects that the Manifest file lives in under a META-INF directory which will
be a sibling to the pom.xml file. If the Manifest lives elsewhere it can be
configured with a path relative to the pom.xml file. The Mojo&apos;s primary use
is for Princeton Softech&apos;s Eclipse Plugin projects.&lt;/li&gt;
&lt;li&gt;Created: Aug 2, 2006 by: prisgupt01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-resources</phase>
      <implementation>org.codehaus.pst.plugin.PomModifierMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>logModifications</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Flag to control logging of POM files before and after modifications</description>
        </parameter>
        <parameter>
          <name>manifest</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Manifest file</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>prefixes</name>
          <type>java.util.ArrayList</type>
          <required>false</required>
          <editable>true</editable>
          <description>The prefixes.</description>
        </parameter>
        <parameter>
          <name>requireManifest</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Flag to set whether the Mojo should complain if the Manifest file is not
found</description>
        </parameter>
      </parameters>
      <configuration>
        <requireManifest implementation="boolean">${requireManifest}</requireManifest>
        <prefixes implementation="java.util.ArrayList">${prefixes}</prefixes>
        <mavenProject implementation="org.apache.maven.project.MavenProject">${project}</mavenProject>
        <manifest implementation="java.io.File">${manifest}</manifest>
        <logModifications implementation="boolean">${logMods}</logModifications>
        <baseDirectory implementation="java.io.File">${basedir}</baseDirectory>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>testPackage</goal>
      <description>&lt;ul&gt;
&lt;li&gt;Title: TestPluginPackagingMojo&lt;/li&gt;
&lt;li&gt;Description: The class &lt;code&gt;TestPluginPackagingMojo&lt;/code&gt; is a
packaging Mojo for packaging Eclipse source plugins for testing.&lt;/li&gt;
&lt;li&gt;Created: Aug 29, 2006 by: prisgupt01&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.pst.plugin.TestPluginPackagingMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use. See &lt;a
href=&quot;http://maven.apache.org/ref/current/maven-archiver/apidocs/org/apache/maven/archiver/MavenArchiveConfiguration.html&quot;&gt;the
Javadocs for MavenArchiveConfiguration&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the classes.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Classifier to add to the artifact generated. If given, the artifact will
be an attachment instead.</description>
        </parameter>
        <parameter>
          <name>finalName</name>
          <alias>jarName</alias>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Name of the generated JAR.</description>
        </parameter>
        <parameter>
          <name>forceCreation</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether creating the archive should be forced.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the generated JAR.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>testClassesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the test classes.</description>
        </parameter>
      </parameters>
      <configuration>
        <testClassesDirectory implementation="java.io.File">${project.build.testOutputDirectory}</testClassesDirectory>
        <classesDirectory implementation="java.io.File">${project.build.outputDirectory}</classesDirectory>
        <outputDirectory implementation="java.io.File">${project.build.directory}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <forceCreation implementation="boolean" default-value="false">${jar.forceCreation}</forceCreation>
        <baseDirectory implementation="java.io.File">${basedir}</baseDirectory>
        <finalName implementation="java.lang.String">${project.build.finalName}</finalName>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>jar</role-hint>
          <field-name>jarArchiver</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies/>
</plugin>