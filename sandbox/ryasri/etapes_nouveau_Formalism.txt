

Pour créer un nouveau formalism on a besoin de  :

I   - Dans : -> fr.lip.move.coloane.core.motor.formalism :

	1. classe formalismManager.java :
		Rajouter le formalisme précis à la liste des formalisms par un :
			listOfFormalisms.add(new mon_Formalism()); // la calsse : -> 

II  - Dans : -> fr.lip.move.coloane.core.motor.formalism .defs :

	1. Créer une classe -> mon_Formalism.java

 		Copier coller d'un classe deja présente et changment des noms +le Nom + l'EXTENSION + largeur et hauteur des figures.

	2. Afin d'avoir les changements visibles sur la pallette, on rajoute les messages souhaités dans : 

		a) au niveau des classes: Messages.java
		b) et aussi sur la fichier des messages " messages.properties"
		c) en dernier, il faudra les rajouter dans le formalism souhaité (mon_Formalism.java).

III - Rajout de règles: Dans : -> fr.lip.move.coloane.core.motor.formalism.permissionRule :
	
	1. Certaines règles de permissions de connexion entre les noeuds sont predéfinies 

	2. Pour réjouter des règles, il faudra créer une nouvelles classe qui implementera IRule.

IV  -  Rajout d'une figure

	1. Pour rajouter le dessin au niveau palette => télécharger l'image (ex:png)et la mettre dans "/resources/formalisms/mon_Image.png")

	2. Rajouter la définition de la figure dans fr.lip.move.coloane.core.figures
	
	3. Rajouter dans mon_Formalism
				elt.setAddrIcone16("/resources/formalisms/mon_Image.png");

V   -  Pour créer un nouveau formalism, le client doit écrire sur le fichier XML: "producteurFormalism.xml", qui sera lui via le parser SAX "ProdForm.jav"

	en éxecutant CreateurFichier.java, la classe se construira.