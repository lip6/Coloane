/*
* generated by Xtext
*/
package fr.lip6.move.ui.labeling;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

import fr.lip6.move.gal.Push;
import fr.lip6.move.gal.Variable;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class GalLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public GalLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}


	//Labels and icons can be computed like this:
	
	/**
	 * Returns description of a Gal variable
	 */
	String text(Variable var) 
	{
		return var.getName() + " = " + var.getValue() + " (initial value)" ;
	}
	
	/**
	 * Describes an array. This will show here initial values of array
	 */
	String text(fr.lip6.move.gal.ArrayPrefix array)
	{
		int size = array.getSize() ; 
		if(size == 0)
			return array.getName() + " : empty" ; 
		else
		{
			EList<Integer> listValues = array.getValues().getValues() ; 
			String result = array.getName() + " : initialized with: ("+ array.getValues().getValues().get(0) ;
			
			for(int i=1; i< size; i++)
				result += "," + listValues.get(i) ; 
			
			result+= ")"; 
			
			return result ; 
		}
	}
	
	
	
/*	 
    String image(MyModel ele) {
      return "MyModel.gif";
    }
*/
}
