package fr.lip6.move.coloane.extensions.importFromBPEL.importFromBPEL;

/**
 * A BPEL Process Monitor (hand-write)
 * used to make sure what kind of monitors
 * should be generated by the phase Monitor Generation.
 * 
 * author: Jun ZHU (LIP6,UPMC, France & School of Computer Science, NUDT, China)
 * e-mail: mail.zhujun@gmail.com
 * create date: 04-05-2009
 */

public class BPELProcessMonitor {
	
	// Define the Incidence Matrix of Petri Nets
	// in a vector Matrix[][]
	// ** Monitor Generation **
	// It is required to define the incidence matrix 
	// with varibles m and n to define the matrix.
	// ## Monitor Generation ##
	int[][] Matrix = new int[10][15];
	
	// Define ProcessAnalyzer return Event type
	final   int  E_Normal = 0;		// Event: Normal Execution
	final 	int  E_Exception = 1;	// Event: Exception happens
	

	
	
	public int ProcessAnalyzer(int msgID){
		int EventType = E_Normal;
		
		
//		switch (stateCurrent) {
//		  case 0:
//		        statements // do these if expr == c1
//		        break;
//		  case 1: 
//		        statements // do these if expr == c2
//		        break;
//		  case 2:
//		        statements // do these if expr ==  any of c's
//		        break;
//		  case 3:
//			  
//		  default:
//		        statements // do these if expr != any above
//		}
		
		return EventType;
	}
	
}
